generator client {
    provider = "prisma-client-js"
    // turn off locally, turn on for pscale:
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
    //turn off locally, turn on for pscale:
    referentialIntegrity = "prisma"
}

model Account {
    id                  String  @id @default(cuid())
    userId              String
    type                String
    provider            String
    providerAccountId   String
    refresh_token       String? @db.Text
    access_token        String? @db.Text
    not_before          Int?
    id_token_expires_in Int?
    profile_info        String?
    expires_at          Int?
    token_type          String?
    scope               String?
    id_token            String? @db.Text
    session_state       String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
